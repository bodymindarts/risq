schema {
  query: Query
}

type Query {
  "Returns null unless --features \"statistics\" is enabled"
  trades(
    market: MarketPair,
    direction: Direction,
    timestampFrom: UnixSecs,
    timestampTo: UnixSecs,
    limit: Int = 100,
    sort: Sort = DESC
  ): [Trade!] @juniper(ownership: "owned"),
  offers(market: MarketPair): [OpenOffer!]! @juniper(ownership: "owned"),
  currencies: [Currency!]!
  markets: [Market!]!
}

enum Sort {
  ASC
  DESC
}

type Trade {
  marketPair: MarketPair! @juniper(ownership: "owned"),
  direction: Direction! @juniper(ownership: "owned"),
  paymentMethodId: String!,
  offerId: ID! @juniper(ownership: "owned"),
  formattedPrice: String! @juniper(ownership: "owned"),
  formattedAmount: String! @juniper(ownership: "owned"),
  formattedVolume: String! @juniper(ownership: "owned"),
  "Number of milliseconds since Epoch as string"
  tradeDate: UnixMillis! @juniper(ownership: "owned")
}

"Number of milliseconds since Epoch as string"
scalar UnixMillis
"Number of secs since Epoch as string"
scalar UnixSecs

enum Direction {
  BUY
  SELL
}

type Currency {
  code: String!,
  name: String!,
  precision: Int! @juniper(ownership: "owned"),
  currencyTypeLowerCase: String!
}

type Market {
  pair: String!,
  name: String!,
  lName: String!,
  lSymbol: String!,
  lPrecision: Int! @juniper(ownership: "owned"),
  lTypeLowerCase: String!,
  rName: String!,
  rSymbol: String!,
  rPrecision: Int! @juniper(ownership: "owned"),
  rTypeLowerCase: String!,
}

"String of market pair eg. btc_eur"
scalar MarketPair

type OpenOffer {
  marketPair: MarketPair! @juniper(ownership: "owned"),
  id: ID! @juniper(ownership: "owned"),
  offerDate: UnixMillis! @juniper(ownership: "owned"),,
  direction: Direction! @juniper(ownership: "owned"),
  formattedAmount: String! @juniper(ownership: "owned"),
  formattedMinAmount: String! @juniper(ownership: "owned"),
  formattedPrice: String! @juniper(ownership: "owned"),
  formattedVolume: String! @juniper(ownership: "owned"),
  paymentMethodId: String!,
  offerFeeTxId: String!,
}
